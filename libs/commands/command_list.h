#ifndef _COMMAND_LIST_H
#define _COMMAND_LIST_H

// Some are generated by the mote (m) others by the Master (M) or both (mM)

#define MSG_SUCCESS	0x0000	// (mM)
#define MSG_ERROR	0x0001	// (mM)
#define MSG_ACK		0x0002	// (mM)
#define MSG_NOTACK	0x0003	// (mM)


// 	Handshaking
#define HS_HELLO	0x0011	// (M) First msg send by a mote or Master
#define HS_ACK		0x0012  // (m) Reply for a handshaking


// 	Control
#define CTRL_WAKEUP	0x0021	// (M) Awake a mote 
#define CTRL_SHUTDOWN	0x0022	// (M) Puts the mote in shutdown mode (only restart with a CTRL_WAKEUP)
#define CTRL_IDLE  	0x0023	// (M) Puts the mote in low power consumption state (if mote is able to)
#define CTRL_RESET  	0x0024	// (M) Reset a mote 
#define CTRL_CHECK	0x0025  // (M) If mote has autochecking capabilities this will ask for an operational test
#define CTRL_SEED	0x0026  // (M) Reserved. Could be used to ofuscate information (cypher, etc.)
#define CTRL_PRIORITY   0x0027  // (M) Assigns a priority for the mote

// 	Sensor
#define SNR_START	0x0061	// (M) 
#define SNR_STOP	0x0062  // (M) 
#define SNR_STATUS_ON	0x0063  // (m) 
#define SNR_STATUS_OFF	0x0064  // (m) 
#define SNR_READ	0x0065  // (M) 
#define SNR_TEST	0x0066  // (M) 



// 	Actuator.  This will work over a channel (ie, a pin) 
#define ACT_ON 		0x0081	// (M) put a high value in a channel
#define ACT_OFF 	0x0082  // (M) put a low value in a channel
#define ACT_TOOGLE 	0x0083  // (M) toggles the value in a channel
#define ACT_PWM 	0x0084  // (M) put a PWM value in a channel






#endif